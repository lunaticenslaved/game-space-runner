name: Push to GitHub Container Registry

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Node.JS environment
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - run: npm ci
      - run: npm run lint

  deploy: 
    needs: lint
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create .env file
        run: |
             echo "DATABASE_URL=postgres://${{ vars.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@postgres:${{ vars.POSTGRES_PORT }}/${{ vars.POSTGRES_DB }}" > .env
             echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
             echo "POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> .env
             echo "POSTGRES_PORT=${{ vars.POSTGRES_PORT }}" >> .env
             echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
             echo "APP_ENV=${{ vars.APP_ENV }}" >> .env
             echo "PORT=${{ vars.PORT }}" >> .env
             echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
             echo "ACCESS_TOKEN_EXPIRES_IN=${{ vars.ACCESS_TOKEN_EXPIRES_IN }}" >> .env
             echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
             echo "REFRESH_TOKEN_EXPIRES_IN=${{ vars.REFRESH_TOKEN_EXPIRES_IN }}" >> .env
             echo "OBJECT_STORAGE_REGION=${{ vars.OBJECT_STORAGE_REGION }}" >> .env
             echo "OBJECT_STORAGE_AVATARS_NAME=${{ vars.OBJECT_STORAGE_AVATARS_NAME }}" >> .env
             echo "OBJECT_STORAGE_AVATARS_KEY_ID=${{ vars.OBJECT_STORAGE_AVATARS_KEY_ID }}" >> .env
             echo "OBJECT_STORAGE_AVATARS_SECRET=${{ vars.OBJECT_STORAGE_AVATARS_SECRET }}" >> .env
             echo "PGADMIN_DEFAULT_EMAIL=${{ vars.PGADMIN_DEFAULT_EMAIL }}" >> .env
             echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> .env
             echo "PGADMIN_LISTEN_PORT=${{ vars.PGADMIN_LISTEN_PORT }}" >> .env

      - name: Remove unused containers
        run: docker-compose down && docker system prune -a -f
      - name: Run docker-compose
        run: docker compose up --detach
